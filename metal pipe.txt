-- Get the required services
local TweenService = game:GetService("TweenService")

-- Create a new ScreenGui
local GUI = Instance.new("ScreenGui")
GUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the main frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 200, 0, 60)
MainFrame.Position = UDim2.new(0, -200, 0.95, -60) -- Start off-screen
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 200)
MainFrame.Parent = GUI

-- Round the corners of the main frame
local MainFrameCorner = Instance.new("UICorner")
MainFrameCorner.CornerRadius = UDim.new(0, 10)
MainFrameCorner.Parent = MainFrame

-- Create the notification frame
local NotificationFrame = Instance.new("Frame")
NotificationFrame.Size = UDim2.new(0.9, 0, 0.8, 0)
NotificationFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
NotificationFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Darker gray
NotificationFrame.Parent = MainFrame

-- Round the corners of the notification frame
local NotificationFrameCorner = Instance.new("UICorner")
NotificationFrameCorner.CornerRadius = UDim.new(0, 10)
NotificationFrameCorner.Parent = NotificationFrame

-- Create the text label
local TextLabel = Instance.new("TextLabel")
TextLabel.Size = UDim2.new(0.9, 0, 0.7, 0)
TextLabel.Position = UDim2.new(0.05, 0, 0.15, 0)
TextLabel.BackgroundTransparency = 1
TextLabel.TextColor3 = Color3.fromRGB(255, 165, 0) -- Orange
TextLabel.TextScaled = true
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.TextYAlignment = Enum.TextYAlignment.Top
TextLabel.Text = "Now Playing chicken beatbox theme"
TextLabel.Parent = NotificationFrame

-- Create the progress bar
local ProgressBar = Instance.new("Frame")
ProgressBar.Size = UDim2.new(0.9, 0, 0.1, 0)
ProgressBar.Position = UDim2.new(0.05, 0, 0.85, 0)
ProgressBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ProgressBar.Parent = NotificationFrame

-- Create the progress bar fill
local ProgressBarFill = Instance.new("Frame")
ProgressBarFill.Size = UDim2.new(1, 0, 1, 0)
ProgressBarFill.BackgroundColor3 = Color3.fromRGB(0, 0, 60) -- Orange
ProgressBarFill.Parent = ProgressBar

-- Function to show the notification
local function ShowNotification()
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local endPosition = UDim2.new(0.01, 0, 0.95, -60)
    local tween = TweenService:Create(MainFrame, tweenInfo, { Position = endPosition })
    tween:Play()

    -- Start the progress bar countdown
    local countdownTime = 6 -- Countdown time in seconds
    local startTime = tick()

    while tick() - startTime < countdownTime do
        local elapsedTime = tick() - startTime
        local progress = 1 - (elapsedTime / countdownTime)
        ProgressBarFill:TweenSize(UDim2.new(progress, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 0.1, true)
        task.wait()
    end

    -- Hide the notification
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
    local startPosition = UDim2.new(0.01, 0, 0.95, -60)
    local endPosition = UDim2.new(-1, 0, 0.95, -60)
    local tween = TweenService:Create(MainFrame, tweenInfo, { Position = endPosition })
    tween:Play()
end

-- Trigger the notification
ShowNotification()

-- Soundtrack
writefile("CHICKEN BEATBOX.mp3", game:HttpGet("https://raw.githubusercontent.com/nicolasbarbosa43243/john-doe/main/ShoToX%20-%20CHICKEN%20BEATBOX%20REMIX.mp3"))

local sound = Instance.new("Sound")
sound.SoundId = getcustomasset("CHICKEN BEATBOX.mp3")
sound.Volume = 1
sound.Looped = true
sound.Name = "ChickenBeat"

local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

sound.Parent = hrp
sound:Play()

-- Criando a Tool
local tool = Instance.new("Tool")
tool.Name = "SoundItem"
tool.RequiresHandle = true

-- Handle
local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(1, 5, 1)
handle.Anchored = false
handle.CanCollide = false
handle.Parent = tool

-- Som principal
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://17803968700"
sound.Volume = 4
sound.Parent = handle

-- Adicionando a Tool ao jogador
local player = game.Players.LocalPlayer
tool.Parent = player.Backpack

-- Quando ativar a Tool
tool.Activated:Connect(function()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid then return end

    -- Tocar animação
    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://218504594"
    local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
    local track = animator:LoadAnimation(anim)
    track:Play()

    task.wait(0.1)

    -- Raycast para detectar acerto
    local origin = character.HumanoidRootPart.Position
    local direction = character.HumanoidRootPart.CFrame.LookVector * 5
    local ray = Ray.new(origin, direction)
    local hit, _ = workspace:FindPartOnRayWithIgnoreList(ray, {character})

    if hit and hit.Parent and hit.Parent:FindFirstChild("Humanoid") then
        local targetHumanoid = hit.Parent:FindFirstChild("Humanoid")
        local targetCharacter = hit.Parent

        -- Tocar som de ataque
        sound:Play()

        -- Esperar 1 segundo e tocar segundo som
        task.wait(1)
        local secondSound = Instance.new("Sound")
        secondSound.SoundId = "rbxassetid://123505593557440"
        secondSound.Volume = 5
        secondSound.Parent = handle
        secondSound:Play()

        -- Ativar ragdoll e aplicar impulso
        targetHumanoid.PlatformStand = true
        targetHumanoid:ChangeState(Enum.HumanoidStateType.Physics)

        for _, part in pairs(targetCharacter:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
                part.Anchored = false

                local bv = Instance.new("BodyVelocity")
                bv.MaxForce = Vector3.new(100000, 100000, 100000)
                bv.Velocity = (part.Position - character.HumanoidRootPart.Position).Unit * 50 + Vector3.new(0, 30, 0)
                bv.Parent = part
                game:GetService("Debris"):AddItem(bv, 0.5)
            end
        end

        -- Limpar o segundo som após alguns segundos
        game:GetService("Debris"):AddItem(secondSound, 5)
    end
end)

